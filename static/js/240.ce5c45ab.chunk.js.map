{"version":3,"file":"static/js/240.ce5c45ab.chunk.js","mappings":"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","sources":["webpack://my-app/./src/component/Pro/Profile.module.css?bc92","webpack://my-app/./src/component/Pro/MyPosts/MyPost.module.css?318e","component/Pro/MyPosts/MyPost.jsx","component/Pro/MyPosts/NewPost.jsx","component/Pro/MyPosts/NewPostContaner.jsx","component/Pro/SaatusProf.jsx","component/Pro/Profile.jsx","component/Pro/ContanerPro.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"img\":\"Profile_img__X7ynM\"};","// extracted by mini-css-extract-plugin\nexport default {\"liked\":\"MyPost_liked__F3xgN\",\"post\":\"MyPost_post__Xfeyc\",\"img\":\"MyPost_img__i0Bp2\",\"grid\":\"MyPost_grid__v-aLO\"};","import s from \"./MyPost.module.css\";\r\nimport photo from \"../../photos/User-avatar.svg.png\"\r\n\r\n\r\nconst Post1 = (props) => {\r\n  return (\r\n    <div className={s.grid}>\r\n      <img\r\n        className={s.img}\r\n        src={props.ava != null ? props.ava : photo}\r\n      ></img>\r\n      <div className={s.post}>{props.mag}</div>\r\n      <div className={s.liked}>\r\n        <span className={s.like}>Like:{props.like}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Post1;\r\n","import React from \"react\";\r\n\r\nconst Newpost = (props) => {\r\n  \r\n  \r\nlet yu = React.createRef()\r\n\r\n  let sus = props.sts;\r\n\r\n  \r\n\r\n\r\n  let oncurka = props.OnChange;\r\n\r\n  let onChangeTextArea = () => {\r\n    let uwu = yu.current.value;\r\n    oncurka(uwu);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <textarea onChange={onChangeTextArea} ref={yu} value={props.profile.newposttext} />\r\n      </div>\r\n      <div>\r\n        <button onClick={sus}>Add New Post</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Newpost;\r\n\r\n//Боже какая же это тупая компонента!\r\n","import React, { useContext } from \"react\";\r\nimport { uptextinpost, addnewpost } from \"../../Redux/ProfileReduser\";\r\nimport Newpost from \"./NewPost\";\r\nimport MyContext from \"../../Redux/Contex\";\r\n\r\nconst NewpostContaner = () => {\r\n\r\n  const context = useContext(MyContext)\r\n  \r\n    let state = context.store.getState()\r\n\r\n    let sts = () => {\r\n      context.store.dispatch(addnewpost())\r\n    }\r\n\r\n    let OnChange = (uwu) => {\r\n      context.store.dispatch(uptextinpost(uwu))\r\n    }\r\n\r\n    return (\r\n      <Newpost profile={state.profile} OnChange={OnChange} sts={sts}/>\r\n    )\r\n  }\r\n\r\n\r\nexport default NewpostContaner;\r\n","import React from \"react\";\r\n\r\nclass StatusProf extends React.Component {\r\n    state = {\r\n        \r\n        editMode: false,\r\n        status: this.props.status\r\n    }\r\n    \r\n\r\n\r\n    onEdit = () => {\r\n        this.setState({\r\n            editMode: true\r\n    })\r\n    }\r\n\r\n    offEdit = () => {\r\n        this.setState({\r\n            editMode: false\r\n    })\r\n\r\n    this.props.setStatus(this.state.status)\r\n    }\r\n\r\n    onCh = (e) => {\r\n        this.setState({\r\n            status: e.currentTarget.value\r\n        })\r\n            }\r\n\r\n\r\n    componentDidUpdate(prevP, prevS) {\r\n\r\n        if(prevP.status !== this.props.status){\r\n        this.setState({\r\n            status: this.props.status\r\n        })}\r\n    }\r\n\r\n    render() {\r\n\r\n        return <>\r\n        {!this.state.editMode &&\r\n            <div>\r\n                <span onDoubleClick={this.onEdit}>{this.props.status == '' ? '---' : this.props.status}</span>\r\n            </div>}\r\n        {this.state.editMode &&\r\n            <div>\r\n                <input onChange={this.onCh} autoFocus={true} onBlur={this.offEdit} value={this.state.status} />\r\n            </div>}\r\n        </>\r\n    }\r\n}\r\n\r\nexport default StatusProf","import d from \"./Profile.module.css\";\r\nimport Post1 from \"./MyPosts/MyPost.jsx\";\r\nimport NewpostContaner from \"./MyPosts/NewPostContaner\";\r\nimport StatusProf from \"./SaatusProf.jsx\";\r\nimport React from \"react\";\r\nimport StatusProfHook from \"./SaatusProfHook\";\r\n\r\n\r\nconst Prof = (props) => {\r\n\r\n\r\n\r\n    let sys = props.props.state.profile.posts.map((sd) => <Post1 ava={props.props.state.profile.photos} mag={sd.tex}\r\n                                                                 like={sd.like}/>);\r\n\r\n    return (\r\n        <div className={d.div}>\r\n            <div className={d.div1}>\r\n                <img\r\n                    className={d.img}\r\n                    src=\"https://study-con.com/wp-content/uploads/2020/03/itu2.jpg\"\r\n                />\r\n            </div>\r\n            <div className={d.div2}>{props.props.state.profile.name}</div>\r\n            <div className={d.div2}>{props.props.state.profile.bio}</div>\r\n            {/*<div>*/}\r\n            {/*    <StatusProfHook setUpStatus={props.getSttatus} status={props.status}/>*/}\r\n            {/*</div>*/}\r\n            <div>\r\n                <NewpostContaner/>\r\n            </div>\r\n\r\n            {sys}\r\n        </div>\r\n    );\r\n\r\n};\r\n\r\n\r\nexport default Prof;\r\n","import Prof from \"./Profile\";\r\nimport MyContext from \"../Redux/Contex\";\r\nimport axios from \"axios\";\r\nimport React, {useContext} from \"react\";\r\nimport {biooo, getProfile, getStatus, nammee, setPhoto, setStatus} from \"../Redux/ProfileReduser\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport {HocRedirect} from \"../hoc/authHoc\";\r\n\r\nclass ProfCont extends React.Component {\r\n    componentDidMount() {\r\n\r\n        this.props.getProf(this.props.id)\r\n\r\n        //this.props.setSttatus(this.props.userid);\r\n\r\n    }\r\n\r\n    render() {\r\n        let Hoc = Prof;\r\n\r\n        return (\r\n            <Hoc\r\n                //setStatus={this.props.setSttatus}\r\n                getSttatusId={this.props.id}\r\n                status={this.props.state.profile.status}\r\n                state={this.props.state}\r\n                props={this.props}\r\n                getSttatus={this.props.getSttatus}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nconst Contaner = React.memo(() => {\r\n    const context = useContext(MyContext);\r\n    let state = context.store.getState();\r\n\r\n    const params = useParams();\r\n    let userId = params.userId;\r\n\r\n    let setphoto = (p) => {\r\n        context.store.dispatch(setPhoto(p));\r\n    };\r\n\r\n    let name = (n) => {\r\n        context.store.dispatch(nammee(n));\r\n    };\r\n\r\n    let bio = (b) => {\r\n        context.store.dispatch(biooo(b));\r\n    };\r\n\r\n    // let setSttatus = (id) => {\r\n    //     context.store.dispatch(setStatus(id));\r\n    // };\r\n    //\r\n    // let getSttatus = (status) => {\r\n    //\r\n    //     context.store.dispatch(getStatus(status));\r\n    // };\r\n\r\n    let gytProf = (id) => {\r\n        \r\n        context.store.dispatch(getProfile(id));\r\n    }\r\n\r\n    let Hoc = HocRedirect(ProfCont)\r\n\r\n    return (\r\n        <Hoc\r\n            id={state.auth.id}\r\n            getProf={gytProf}\r\n            //getSttatus={getSttatus}\r\n           // setSttatus={setSttatus}\r\n            state={state}\r\n            setP={setphoto}\r\n            name={name}\r\n            bio={bio}\r\n            userid={userId}\r\n        />\r\n    );\r\n});\r\n\r\n\r\nexport default Contaner;\r\n"],"names":["props","_jsxs","className","s","grid","children","_jsx","img","src","ava","photo","post","mag","liked","like","yu","React","sus","sts","oncurka","OnChange","onChange","onChangeTextArea","uwu","current","value","ref","profile","newposttext","onClick","NewpostContaner","context","useContext","MyContext","state","store","getState","Newpost","dispatch","uptextinpost","addnewpost","sys","posts","map","sd","Post1","photos","tex","d","div","div1","div2","name","bio","ProfCont","componentDidMount","this","getProf","id","render","Hoc","Prof","getSttatusId","status","getSttatus","userId","useParams","HocRedirect","auth","getProfile","setP","p","setPhoto","n","nammee","b","biooo","userid"],"sourceRoot":""}